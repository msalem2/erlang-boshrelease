#!/usr/bin/env bash

# job template binding variables

# job name & index of this VM within cluster
# e.g. JOB_NAME=redis, JOB_INDEX=0
export NAME='<%= name %>'
export JOB_INDEX=<%= index %>
# full job name, like redis/0 or webapp/3
export JOB_FULL="$NAME/$JOB_INDEX"

export DEPLOYMENT_NAME=<%= spec.deployment %>
export DNS_ROOT=<%= spec.dns_domain_name %>

# $BIND_ADDR is the IP of the first network
export BIND_ADDR=<%= spec.networks.send(spec.networks.methods(false).first).ip %>

# % disk full levels
export DISK_CRITICAL_LEVEL=<%= p("health.disk.critical") %>
export DISK_WARNING_LEVEL=<%= p("health.disk.warning") %>

# Erlang VM variables
export PA="-pa /var/vcap/packages/erlang/lib/erlang/lib/*/ebin"
export COOKIE="-setcookie <%= p("node_name") %>"
export LOGFILE=$LOG_DIR/<%= p("node_name") %>.log
export DIST="-kernel inet_dist_listen_min <%= p("dist_listen_min") %> -kernel inet_dist_listen_max <%= p("dist_listen_max") %>"
export LOG="-sasl sasl_error_logger {file,\"$LOGFILE\"}"
export HOSTNAME=`hostname -s`
export DETACH="-heart -noshell"
export NODENAME=<%= p("node_name") %>
export STOPCMD="rpc:call('${NODENAME}@${BIND_ADDR}', init, stop, [])"